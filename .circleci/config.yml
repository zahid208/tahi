version: 2.1

commands:
  check_untracked_files:
    description: Check un-tracked changes using git porcelain command
    parameters:
      path:
        description: Path to check
        type: string
        default: "."
    steps:
      - run:
          name: Check un-tracked changes
          command: |
            if [[ `git status <<parameters.path>> --porcelain` ]]
            then
              echo "ERROR: running the previous command has introduced changes. Hence, Failing the build."
              git status --porcelain
              exit 1
            fi

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-bundle-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-bundle-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --clean --jobs=4 --retry=3 --path vendor/bundle

      - check_untracked_files:
          path: "Gemfile.lock"

      - save_cache:
          paths:
            - vendor/bundle
          key: v1-bundle-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: cp .circleci/database.yml config/database.yml
      - run: RAILS_ENV=test bundle exec rake db:create
      - run: RAILS_ENV=test bundle exec rake db:migrate

      - check_untracked_files:
          path: "db/schema.rb"

      - run:
          name: I18n Health
          command: bundle exec i18n-tasks health

      # run code_analysis!
      - run:
          name: run code analysis
          command: RAILS_ENV=test bundle exec rake code:analysis

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      # run tests
      - run:
          name: run tests
          command: RAILS_ENV=test bundle exec rspec

      # run codeclimate!
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
            ./cc-test-reporter after-build

      - run:
          name: Check for missing annotations
          command: RAILS_ENV=test bundle exec annotate
      
      # Check if running annotate changed any file
      - check_untracked_files:
          path: "app/ spec/"
